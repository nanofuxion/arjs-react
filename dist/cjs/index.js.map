{"version":3,"file":"index.js","sources":["../../src/connectors/arconnect.ts","../../node_modules/regenerator-runtime/runtime.js","../../src/connectors/smartweave.ts","../../src/connectors/arweave-js.ts","../../src/connectors/index.ts","../../src/index.tsx"],"sourcesContent":["import Arweave from 'arweave';\nimport { interactWrite, readContract, interactRead } from \"./smartweave\";\nimport { arcType } from './types';\n\n\nfunction getSafe(fn: () => any, defaultVal: string) {\n    try {\n        return fn();\n    } catch (e) {\n        return defaultVal;\n    }\n}\nlet selfAddy: string,\n    setAw: boolean = false;\n\nexport async function Arc(key: { [x: string]: any; permissions: any }, loadStatus: (arg0: string) => any, swc: boolean) {\n    let permissions = key.permissions, \n    name = getSafe(key[\"name\"], \"\"), \n    logo = getSafe(key[\"logo\"], \"\");\n\n    async function awStat(){\n        setAw == true;\n        try {\n            await window.arweaveWallet.connect([...permissions, \"ACCESS_ADDRESS\"], { name, logo });\n        } catch (error) {\n            throw error\n        }\n    }\n\n    let arweave: Arweave;\n    let Arw: Arweave;\n\n    async function setArweave(){\n        Arw = await Arweave.init({ host: 'arweave.net' });\n        // @ts-ignore\n        let arweaveBase : Arweave = await window.Arweave.init({ host: 'arweave.net' });\n        arweave = arweaveBase;\n        arweave.blocks = Arw.blocks;\n        selfAddy = await new Promise (async resolve => resolve(await window.arweaveWallet.getActiveAddress()));\n    }\n\n    // await window.addEventListener(\"arweaveWalletLoaded\", async () => {\n    //     await awStat().then(async ()=>{\n    //         await setTimeout(async () => {\n    //         let Arw: Arweave = await Arweave.init({ host: 'arweave.net' });\n    //         // @ts-ignore\n    //         let arweaveBase: Arweave = await window.Arweave.init({ host: 'arweave.net' });\n    //         arweave = arweaveBase;\n    //         arweave.blocks = Arw.blocks;\n    //         selfAddy = await new Promise (async resolve => resolve(await window.arweaveWallet.getActiveAddress()));\n    //         }, 1000);\n    //     })\n    // })\n    if(!setAw){\n            await awStat().then(async ()=> await setArweave())\n        }\n\n\n\n        return await <arcType>{\n\n        transaction: async function (data) {\n            return await arweave.createTransaction(data)\n        },\n\n        post: async function (transaction) {\n            return await arweave.transactions.post(transaction)\n        },\n\n        addTag: function (transaction, name, value) {\n            transaction.addTag(name, value)\n        },\n\n        sign: async function (transaction) {\n            await arweave.transactions.sign(transaction)\n        },\n\n        submit: async function (transaction) {\n            return await arweave.transactions.getUploader(transaction)\n        },\n\n        smartweave: {\n            write: async (input, id) =>{\n                let data:any;\n                await loadStatus(\"add\");\n                (swc) ? await interactWrite(arweave, 'use_wallet', id, input)\n                .then(result => data = result) : \"\"\n                await loadStatus(\"sub\");\n                return data;\n                },\n            iread: async (input, id) =>{\n                let data:any;\n                await loadStatus(\"add\");\n                (swc) ? await interactRead(arweave, 'use_wallet', id, input)\n                .then(result => data = result) : \"\"\n                await loadStatus(\"sub\");\n                return data;\n                },\n            read: async (id) =>{\n                let data:any;\n                await loadStatus(\"add\");\n                (swc) ? await readContract(arweave, id)\n                .then(result => data = result) : \"\"\n                await loadStatus(\"sub\");\n                return data;\n            },\n        },\n\n        getArweave: function () {\n            return arweave;\n        },\n\n        //arconnect specific \n \n        disconnect: function () {\n            window.arweaveWallet.disconnect();\n        },\n\n        getBalance: async function (this: any, walletID = 'self', setAttr = () => { }) {\n            // @ts-ignore\n            walletID = (walletID == 'self') ? selfAddy : walletID\n            return new Promise (async (resolve) =>{\n                await Arw.wallets.getBalance(walletID).then((balance) => {\n                    setAttr(balance);\n                    resolve(balance)\n                })\n            });\n        },\n        getAddress: function (setAttr = () => { }) {\n            return new Promise(async (resolve) => {\n                try {\n                    await window.arweaveWallet.getActiveAddress().then(res => {\n                        setAttr(res);\n                        resolve(res);\n                    });\n                } catch (error) {\n                    resolve(selfAddy);\n                    setAttr(selfAddy);\n                }\n            })\n        },\n    }\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { JWKInterface } from 'arweave/node/lib/wallet'\nimport { interactWrite as write } from 'smartweave'\nimport { interactRead as iread } from 'smartweave'\nimport { readContract as read } from 'smartweave'\n\ntype tags = { name: string; value: string }[]\n\nexport const interactWrite = async (arweave: import(\"arweave\"), wallet: \"use_wallet\" | JWKInterface, contractId: string, input: string) => {\n\n    const tags:tags = [\n    {name: \"App-Name\", value: \"SmartWeaveAction\"}, \n    {name: \"App-Version\", value: \"0.3.0\"}, \n    {name: \"Contract-Src\", value: contractId}, \n    ]\n    let inputJson = JSON.parse(input)\n    console.log(inputJson)\n    return await write(arweave, wallet, contractId, inputJson, tags)\n}\n\nexport const interactRead = async (arweave: import(\"arweave\"), wallet: \"use_wallet\" | JWKInterface | undefined, contractId: string, input: string) => {\n\n    const tags:tags = [\n    {name: \"App-Name\", value: \"SmartWeaveAction\"}, \n    {name: \"App-Version\", value: \"0.3.0\"}, \n    {name: \"Contract-Src\", value: contractId}, \n    ]\n    let inputJson = JSON.parse(input)\n    console.log(inputJson)\n    return await iread(arweave, wallet, contractId, inputJson, tags)\n}\n\nexport const readContract = async (arweave: import(\"arweave\"), contractId: string) => {\n    return await read(arweave, contractId)\n}","import Arweave from 'arweave';\nimport { interactWrite, readContract, interactRead } from \"./smartweave\";\nimport { arjsType } from './types';\n\nlet selfAddy: any =  \"\";\n\nexport async function Arjs(key: any, loadStatus: any, swc: any) {\n    let arweave: Arweave = await Arweave.init({ host: 'arweave.net' });\n    console.log(arweave)\n    key = (typeof key == 'string')? JSON.parse(key) : key;\n    if(!key['kty']) throw \"Data Input is not a arweave key.\"\n\n        selfAddy = await new Promise (async resolve => resolve(await arweave.wallets.jwkToAddress(key)));\n\n        return await <arjsType>{\n\n        transaction: async function (data: any, _key: any = key) {\n            return await arweave.createTransaction(data, _key);\n        },\n\n        post: async function (transaction) {\n            return await arweave.transactions.post(transaction);\n        },\n\n        addTag: function (transaction, name: string, value: string) {\n            transaction.addTag(name, value);\n        },\n\n        sign: async function (transaction, _key: any = key) {\n            await arweave.transactions.sign(transaction, _key);\n        },\n\n        submit: async function (transaction) {\n            return await arweave.transactions.getUploader(transaction);\n        },\n\n        smartweave: {\n            write: async (input: any, id: string, _key: any = key) =>{\n                let data:any;\n                await loadStatus(\"add\");\n                (swc) ? await interactWrite(arweave, _key, id, input)\n                .then(result => data = result) : \"\"\n                await loadStatus(\"sub\");\n                return data;\n            },\n            iread: async (input: any, id: string, _key: any = key) =>{\n                let data:any;\n                await loadStatus(\"add\");\n                (swc) ? await interactRead(arweave, _key, id, input)\n                .then(result => data = result) : \"\"\n                await loadStatus(\"sub\");\n                return data;\n            },\n            read: async (id: string) =>{\n                let data:any;\n                loadStatus(\"add\");\n                (swc) ? await readContract(arweave, id)\n                .then(result => data = result) : \"\"\n                loadStatus(\"sub\");\n                return data;\n            },\n        },\n\n        getArweave: function () {\n            return arweave;\n        },\n\n        //arweave specific\n\n        disconnect: function () {},\n\n        getBalance: async function (this: any, walletID: string = 'self', setAttr: any = () => { }) {\n            // @ts-ignore\n            walletID = (walletID == 'self') ? selfAddy : walletID\n            return await new Promise (async (resolve) =>{\n                await arweave.wallets.getBalance(walletID).then((balance) => {\n                    setAttr(balance);\n                    resolve(balance);\n                })\n            });\n        },\n\n        getAddress: async function (this: any, setAttr: any = () => { }) {\n            return await new Promise (async (resolve) =>{\n                await arweave.wallets.jwkToAddress(key).then((addy) => {\n                    setAttr(addy);\n                    resolve(addy);\n                });\n            })\n        },\n\n    }\n}\n\n","import { Arc } from './arconnect'\nimport { Arjs } from './arweave-js'\n\nexport function connectors(connector: Array<any>, swc: boolean):any {\n    return {\n        connectAr: async function (wallet: any, loadStatus: any, key: any) {\n            switch (wallet) {\n                case \"arweave\":\n                    return (connector.indexOf(wallet) != -1) ? await Arjs(key, loadStatus, swc) : \"\"\n                case \"arconnect\":\n                    return (connector.indexOf(wallet) != -1) ? await Arc(key, loadStatus, swc) : \"\"\n                default: throw new console.error(\"error here\")\n            }\n        }\n    }\n}\n\n","import { arType } from \"/types\";\nimport React, { useEffect, createContext, useContext, useState, useMemo, useCallback } from \"react\";\nimport { connectors as arConnector } from './connectors/index';\n// import { session } from './sesssionUtils/sessionStorage';\nimport { WalletContext, Wallet, Props, Status, Provider } from './types'\n\nconst UseArjsContext = createContext<WalletContext>(null);\n\nexport function useArjs(): Wallet {\n    const walletContext = useContext(UseArjsContext);\n\n    if (walletContext === null) {\n        throw new Error(\n            'useArjs() can only be used inside of <ArjsProvider />, ' +\n            'please declare it at a higher level.'\n        )\n    }\n\n    const { wallet, arweave } = walletContext\n    return useMemo(() => {\n        // @ts-ignore\n        return  { ...arweave, ...wallet}\n    }, [wallet, arweave])\n}\n\nexport { arConnector as connectors }\n\nexport function ArjsProvider({ connectors, enableSWC = false, children }: Props) {\n    const walletContext = useContext(UseArjsContext);\n\n    if (walletContext !== null) {\n        throw new Error('<ArjsProvider /> has already been declared.')\n    }\n    const [status, setStatus] = useState<Status>('disconnected'),\n    [provider,setProvider] = useState<Provider>('disconnected'),\n    [arweave, setArweave] = useState<arType>(null),\n    [isloading,setIsloading] = useState<number>(0)\n\n    \n\n    let list: Array<any> = [];\n    for (const connector in connectors) {\n        if (connector == \"arweave\" && connectors[connector]) {\n            list.push(connector)\n        }\n\n        if (connector == \"arconnect\" && connectors[connector])\n            list.push(connector)\n    };\n\n    const [enabledList, setEnabledList] = useState<Array<string>>(list);\n\n    useEffect(() => {\n        setEnabledList(list);\n    }, []);\n\n    const loadStatus = useCallback(\n        (action: string) => {\n            switch (action) {\n                case \"sub\":\n                    setIsloading(isloading - 1)\n                    return isloading;\n                case \"add\":\n                    setIsloading(isloading + 1)\n                    return isloading;\n                default: throw \"error at loadStatus = useCallback\"\n            }\n        },\n        [\n            isloading\n        ])\n\n    let Aggr = useMemo(() => {\n        return arConnector(enabledList, enableSWC);\n    }, [enabledList]);\n\n\n    const disconnect = useCallback(() => {\n        setIsloading(0);\n        setStatus('disconnected');\n        setProvider('disconnected');\n        // session.delSession(\"walletSession\")\n        // session.delSession(\"arweaveWallet\")\n    }, [            \n        status,\n        arweave,\n        provider,\n        isloading,\n        loadStatus\n    ]);\n\n    const connect = useCallback(async (connector, perms) => {\n        disconnect()\n        setStatus('connecting');\n            await Aggr.connectAr(connector, loadStatus, perms).then(async (result)=>{\n                await setArweave(await result);\n                setProvider(connector);\n                setStatus('connected');\n            }).catch (err=>{ \n                setStatus('failed')\n                throw `failed to connect to ${connector}: ${err}`\n            });\n    }, [disconnect])\n\n    const ready = (startFunc) => useEffect(() => {\n        if(status == \"connected\")startFunc()\n    },[status,arweave])\n\n    const wallet: Wallet = useMemo(\n        () => ({\n            connect,\n            status,\n            arweave,\n            provider,\n            ready,\n            isloading,\n            disconnect\n        }),\n        [\n            connect,\n            status,\n            arweave,\n            provider,\n            isloading,\n            loadStatus,\n            disconnect\n        ])\n\n    return (\n        <UseArjsContext.Provider value={{\n            wallet,\n            arweave,\n        }}>\n            {children}\n        </UseArjsContext.Provider>\n    );\n}"],"names":["selfAddy","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","interactWrite","arweave","wallet","contractId","input","tags","inputJson","JSON","parse","console","log","write","interactRead","iread","readContract","read","getSafe","defaultVal","e","Arc","loadStatus","swc","awStat","setArweave","Arweave","init","host","Arw","window","blocks","arweaveWallet","getActiveAddress","connect","permissions","logo","transaction","data","createTransaction","post","transactions","addTag","sign","submit","getUploader","smartweave","id","getArweave","disconnect","getBalance","walletID","setAttr","wallets","balance","getAddress","res","Arjs","jwkToAddress","_key","addy","connectors","connector","connectAr","indexOf","UseArjsContext","createContext","enableSWC","children","useContext","useState","status","setStatus","provider","setProvider","isloading","setIsloading","list","enabledList","setEnabledList","useEffect","useCallback","action","Aggr","useMemo","arConnector","perms","ready","startFunc","React","Provider","walletContext"],"mappings":"uuBAYIA,mBCLJ,IAAIC,EAAW,SAAUC,GAGvB,IAAIC,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOC,EAAKC,EAAKC,GAOxB,OANAf,OAAOgB,eAAeH,EAAKC,EAAK,CAC9BC,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAELN,EAAIC,GAEb,IAEEF,EAAO,GAAI,IACX,MAAOQ,GACPR,EAAS,SAASC,EAAKC,EAAKC,GAC1B,OAAOF,EAAIC,GAAOC,GAItB,SAASM,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IACIC,EAAY1B,OAAO2B,QADFJ,GAAWA,EAAQtB,qBAAqB2B,EAAYL,EAAUK,GACtC3B,WACzC4B,EAAU,IAAIC,EAAQL,GAAe,IAMzC,OAFAC,EAAUK,QAsMZ,SAA0BT,EAASE,EAAMK,GACvC,IAAIG,EA/KuB,iBAiL3B,OAAO,SAAgBC,EAAQC,GAC7B,GAhLoB,cAgLhBF,EACF,MAAM,IAAIG,MAAM,gCAGlB,GAnLoB,cAmLhBH,EAA6B,CAC/B,GAAe,UAAXC,EACF,MAAMC,EAKR,MAoQG,CAAEnB,WAzfPqB,EAyfyBC,MAAM,GA9P/B,IAHAR,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,CACX,IAAII,EAAWT,EAAQS,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUT,GACnD,GAAIU,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBV,EAAQI,OAGVJ,EAAQa,KAAOb,EAAQc,MAAQd,EAAQK,SAElC,GAAuB,UAAnBL,EAAQI,OAAoB,CACrC,GAnNqB,mBAmNjBD,EAEF,MADAA,EAjNc,YAkNRH,EAAQK,IAGhBL,EAAQe,kBAAkBf,EAAQK,SAEN,WAAnBL,EAAQI,QACjBJ,EAAQgB,OAAO,SAAUhB,EAAQK,KAGnCF,EA5NkB,YA8NlB,IAAIc,EAASC,EAASzB,EAASE,EAAMK,GACrC,GAAoB,WAAhBiB,EAAOE,KAAmB,CAO5B,GAJAhB,EAAQH,EAAQQ,KAjOA,YAFK,iBAuOjBS,EAAOZ,MAAQO,EACjB,SAGF,MAAO,CACL1B,MAAO+B,EAAOZ,IACdG,KAAMR,EAAQQ,MAGS,UAAhBS,EAAOE,OAChBhB,EA/OgB,YAkPhBH,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,OA9QPe,CAAiB3B,EAASE,EAAMK,GAE7CH,EAcT,SAASqB,EAASG,EAAIrC,EAAKqB,GACzB,IACE,MAAO,CAAEc,KAAM,SAAUd,IAAKgB,EAAGC,KAAKtC,EAAKqB,IAC3C,MAAOd,GACP,MAAO,CAAE4B,KAAM,QAASd,IAAKd,IAhBjCtB,EAAQuB,KAAOA,EAoBf,IAOIoB,EAAmB,GAMvB,SAASb,KACT,SAASwB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkBhD,GAAkB,WAClC,OAAOiD,MAGT,IAAIC,EAAWxD,OAAOyD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4B3D,GAC5BG,EAAOiD,KAAKO,EAAyBpD,KAGvCgD,EAAoBI,GAGtB,IAAIE,EAAKP,EAA2BpD,UAClC2B,EAAU3B,UAAYD,OAAO2B,OAAO2B,GAWtC,SAASO,EAAsB5D,GAC7B,CAAC,OAAQ,QAAS,UAAU6D,SAAQ,SAAS7B,GAC3CrB,EAAOX,EAAWgC,GAAQ,SAASC,GACjC,OAAOqB,KAAKxB,QAAQE,EAAQC,SAkClC,SAAS6B,EAAcrC,EAAWsC,GAgChC,IAAIC,EAgCJV,KAAKxB,QA9BL,SAAiBE,EAAQC,GACvB,SAASgC,IACP,OAAO,IAAIF,GAAY,SAASG,EAASC,IAnC7C,SAASC,EAAOpC,EAAQC,EAAKiC,EAASC,GACpC,IAAItB,EAASC,EAASrB,EAAUO,GAASP,EAAWQ,GACpD,GAAoB,UAAhBY,EAAOE,KAEJ,CACL,IAAIsB,EAASxB,EAAOZ,IAChBnB,EAAQuD,EAAOvD,MACnB,OAAIA,GACiB,iBAAVA,GACPb,EAAOiD,KAAKpC,EAAO,WACdiD,EAAYG,QAAQpD,EAAMwD,SAASC,MAAK,SAASzD,GACtDsD,EAAO,OAAQtD,EAAOoD,EAASC,MAC9B,SAAShD,GACViD,EAAO,QAASjD,EAAK+C,EAASC,MAI3BJ,EAAYG,QAAQpD,GAAOyD,MAAK,SAASC,GAI9CH,EAAOvD,MAAQ0D,EACfN,EAAQG,MACP,SAASI,GAGV,OAAOL,EAAO,QAASK,EAAOP,EAASC,MAvBzCA,EAAOtB,EAAOZ,KAiCZmC,CAAOpC,EAAQC,EAAKiC,EAASC,MAIjC,OAAOH,EAaLA,EAAkBA,EAAgBO,KAChCN,EAGAA,GACEA,KAkHV,SAAS1B,EAAoBF,EAAUT,GACrC,IAAII,EAASK,EAAS/B,SAASsB,EAAQI,QACvC,QA1TEG,IA0TEH,EAAsB,CAKxB,GAFAJ,EAAQS,SAAW,KAEI,UAAnBT,EAAQI,OAAoB,CAE9B,GAAIK,EAAS/B,SAAiB,SAG5BsB,EAAQI,OAAS,SACjBJ,EAAQK,SArUZE,EAsUII,EAAoBF,EAAUT,GAEP,UAAnBA,EAAQI,QAGV,OAAOQ,EAIXZ,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAChB,kDAGJ,OAAOlC,EAGT,IAAIK,EAASC,EAASd,EAAQK,EAAS/B,SAAUsB,EAAQK,KAEzD,GAAoB,UAAhBY,EAAOE,KAIT,OAHAnB,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,IACrBL,EAAQS,SAAW,KACZG,EAGT,IAAImC,EAAO9B,EAAOZ,IAElB,OAAM0C,EAOFA,EAAKvC,MAGPR,EAAQS,EAASuC,YAAcD,EAAK7D,MAGpCc,EAAQiD,KAAOxC,EAASyC,QAQD,WAAnBlD,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,SAzXVE,GAmYFP,EAAQS,SAAW,KACZG,GANEmC,GA3BP/C,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAAU,oCAC5B9C,EAAQS,SAAW,KACZG,GAoDX,SAASuC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB1B,KAAKgC,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAIpC,EAASoC,EAAMQ,YAAc,GACjC5C,EAAOE,KAAO,gBACPF,EAAOZ,IACdgD,EAAMQ,WAAa5C,EAGrB,SAAShB,EAAQL,GAIf8B,KAAKgC,WAAa,CAAC,CAAEJ,OAAQ,SAC7B1D,EAAYqC,QAAQkB,EAAczB,MAClCA,KAAKoC,OAAM,GA8Bb,SAAShC,EAAOiC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAStF,GAC9B,GAAIuF,EACF,OAAOA,EAAe1C,KAAKyC,GAG7B,GAA6B,mBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIC,GAAK,EAAGlB,EAAO,SAASA,IAC1B,OAASkB,EAAIJ,EAASG,QACpB,GAAI7F,EAAOiD,KAAKyC,EAAUI,GAGxB,OAFAlB,EAAK/D,MAAQ6E,EAASI,GACtBlB,EAAKzC,MAAO,EACLyC,EAOX,OAHAA,EAAK/D,WAzeTqB,EA0eI0C,EAAKzC,MAAO,EAELyC,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMmB,GAIjB,SAASA,IACP,MAAO,CAAElF,WAzfPqB,EAyfyBC,MAAM,GA+MnC,OA5mBAe,EAAkBnD,UAAY2D,EAAGsC,YAAc7C,EAC/CA,EAA2B6C,YAAc9C,EACzCA,EAAkB+C,YAAcvF,EAC9ByC,EACA3C,EACA,qBAaFZ,EAAQsG,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAASlD,GAG2B,uBAAnCkD,EAAKH,aAAeG,EAAKC,QAIhCzG,EAAQ0G,KAAO,SAASH,GAQtB,OAPIrG,OAAOyG,eACTzG,OAAOyG,eAAeJ,EAAQhD,IAE9BgD,EAAOK,UAAYrD,EACnBzC,EAAOyF,EAAQ3F,EAAmB,sBAEpC2F,EAAOpG,UAAYD,OAAO2B,OAAOiC,GAC1ByC,GAOTvG,EAAQ6G,MAAQ,SAASzE,GACvB,MAAO,CAAEqC,QAASrC,IAsEpB2B,EAAsBE,EAAc9D,WACpC8D,EAAc9D,UAAUO,GAAuB,WAC7C,OAAO+C,MAETzD,EAAQiE,cAAgBA,EAKxBjE,EAAQ8G,MAAQ,SAAStF,EAASC,EAASC,EAAMC,EAAauC,QACxC,IAAhBA,IAAwBA,EAAc6C,SAE1C,IAAIC,EAAO,IAAI/C,EACb1C,EAAKC,EAASC,EAASC,EAAMC,GAC7BuC,GAGF,OAAOlE,EAAQsG,oBAAoB7E,GAC/BuF,EACAA,EAAKhC,OAAON,MAAK,SAASF,GACxB,OAAOA,EAAOjC,KAAOiC,EAAOvD,MAAQ+F,EAAKhC,WAuKjDjB,EAAsBD,GAEtBhD,EAAOgD,EAAIlD,EAAmB,aAO9BkD,EAAGtD,GAAkB,WACnB,OAAOiD,MAGTK,EAAGmD,SAAW,WACZ,MAAO,sBAkCTjH,EAAQkH,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIlG,KAAOmG,EACdD,EAAKxB,KAAK1E,GAMZ,OAJAkG,EAAKE,UAIE,SAASpC,IACd,KAAOkC,EAAKjB,QAAQ,CAClB,IAAIjF,EAAMkG,EAAKG,MACf,GAAIrG,KAAOmG,EAGT,OAFAnC,EAAK/D,MAAQD,EACbgE,EAAKzC,MAAO,EACLyC,EAQX,OADAA,EAAKzC,MAAO,EACLyC,IAsCXhF,EAAQ6D,OAASA,EAMjB7B,EAAQ7B,UAAY,CAClBiG,YAAapE,EAEb6D,MAAO,SAASyB,GAcd,GAbA7D,KAAK8D,KAAO,EACZ9D,KAAKuB,KAAO,EAGZvB,KAAKb,KAAOa,KAAKZ,WApgBjBP,EAqgBAmB,KAAKlB,MAAO,EACZkB,KAAKjB,SAAW,KAEhBiB,KAAKtB,OAAS,OACdsB,KAAKrB,SAzgBLE,EA2gBAmB,KAAKgC,WAAWzB,QAAQ2B,IAEnB2B,EACH,IAAK,IAAIb,KAAQhD,KAEQ,MAAnBgD,EAAKe,OAAO,IACZpH,EAAOiD,KAAKI,KAAMgD,KACjBT,OAAOS,EAAKgB,MAAM,MACrBhE,KAAKgD,QAnhBXnE,IAyhBFoF,KAAM,WACJjE,KAAKlB,MAAO,EAEZ,IACIoF,EADYlE,KAAKgC,WAAW,GACLG,WAC3B,GAAwB,UAApB+B,EAAWzE,KACb,MAAMyE,EAAWvF,IAGnB,OAAOqB,KAAKmE,MAGd9E,kBAAmB,SAAS+E,GAC1B,GAAIpE,KAAKlB,KACP,MAAMsF,EAGR,IAAI9F,EAAU0B,KACd,SAASqE,EAAOC,EAAKC,GAYnB,OAXAhF,EAAOE,KAAO,QACdF,EAAOZ,IAAMyF,EACb9F,EAAQiD,KAAO+C,EAEXC,IAGFjG,EAAQI,OAAS,OACjBJ,EAAQK,SApjBZE,KAujBY0F,EAGZ,IAAK,IAAI9B,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GACxBlD,EAASoC,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOyC,EAAO,OAGhB,GAAI1C,EAAMC,QAAU5B,KAAK8D,KAAM,CAC7B,IAAIU,EAAW7H,EAAOiD,KAAK+B,EAAO,YAC9B8C,EAAa9H,EAAOiD,KAAK+B,EAAO,cAEpC,GAAI6C,GAAYC,EAAY,CAC1B,GAAIzE,KAAK8D,KAAOnC,EAAME,SACpB,OAAOwC,EAAO1C,EAAME,UAAU,GACzB,GAAI7B,KAAK8D,KAAOnC,EAAMG,WAC3B,OAAOuC,EAAO1C,EAAMG,iBAGjB,GAAI0C,GACT,GAAIxE,KAAK8D,KAAOnC,EAAME,SACpB,OAAOwC,EAAO1C,EAAME,UAAU,OAG3B,CAAA,IAAI4C,EAMT,MAAM,IAAI7F,MAAM,0CALhB,GAAIoB,KAAK8D,KAAOnC,EAAMG,WACpB,OAAOuC,EAAO1C,EAAMG,gBAU9BxC,OAAQ,SAASG,EAAMd,GACrB,IAAK,IAAI8D,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMC,QAAU5B,KAAK8D,MACrBnH,EAAOiD,KAAK+B,EAAO,eACnB3B,KAAK8D,KAAOnC,EAAMG,WAAY,CAChC,IAAI4C,EAAe/C,EACnB,OAIA+C,IACU,UAATjF,GACS,aAATA,IACDiF,EAAa9C,QAAUjD,GACvBA,GAAO+F,EAAa5C,aAGtB4C,EAAe,MAGjB,IAAInF,EAASmF,EAAeA,EAAavC,WAAa,GAItD,OAHA5C,EAAOE,KAAOA,EACdF,EAAOZ,IAAMA,EAET+F,GACF1E,KAAKtB,OAAS,OACdsB,KAAKuB,KAAOmD,EAAa5C,WAClB5C,GAGFc,KAAK2E,SAASpF,IAGvBoF,SAAU,SAASpF,EAAQwC,GACzB,GAAoB,UAAhBxC,EAAOE,KACT,MAAMF,EAAOZ,IAcf,MAXoB,UAAhBY,EAAOE,MACS,aAAhBF,EAAOE,KACTO,KAAKuB,KAAOhC,EAAOZ,IACM,WAAhBY,EAAOE,MAChBO,KAAKmE,KAAOnE,KAAKrB,IAAMY,EAAOZ,IAC9BqB,KAAKtB,OAAS,SACdsB,KAAKuB,KAAO,OACa,WAAhBhC,EAAOE,MAAqBsC,IACrC/B,KAAKuB,KAAOQ,GAGP7C,GAGT0F,OAAQ,SAAS9C,GACf,IAAK,IAAIW,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMG,aAAeA,EAGvB,OAFA9B,KAAK2E,SAAShD,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPzC,IAKb2F,MAAS,SAASjD,GAChB,IAAK,IAAIa,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMC,SAAWA,EAAQ,CAC3B,IAAIrC,EAASoC,EAAMQ,WACnB,GAAoB,UAAhB5C,EAAOE,KAAkB,CAC3B,IAAIqF,EAASvF,EAAOZ,IACpBuD,EAAcP,GAEhB,OAAOmD,GAMX,MAAM,IAAIlG,MAAM,0BAGlBmG,cAAe,SAAS1C,EAAUf,EAAYE,GAa5C,OAZAxB,KAAKjB,SAAW,CACd/B,SAAUoD,EAAOiC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBxB,KAAKtB,SAGPsB,KAAKrB,SA7rBPE,GAgsBOK,IAQJ3C,GAOsByI,EAAOzI,SAGtC,IACE0I,mBAAqB3I,EACrB,MAAO4I,GAUPC,SAAS,IAAK,yBAAdA,CAAwC7I,gCCnuB7B8I,6BAAgB,WAAOC,EAA4BC,EAAqCC,EAAoBC,iFAE/GC,EAAY,CAClB,CAACzC,KAAM,WAAYxF,MAAO,oBAC1B,CAACwF,KAAM,cAAexF,MAAO,SAC7B,CAACwF,KAAM,eAAgBxF,MAAO+H,IAE1BG,EAAYC,KAAKC,MAAMJ,GAC3BK,QAAQC,IAAIJ,YACCK,gBAAMV,EAASC,EAAQC,EAAYG,EAAWD,kJAGlDO,6BAAe,WAAOX,EAA4BC,EAAiDC,EAAoBC,iFAE1HC,EAAY,CAClB,CAACzC,KAAM,WAAYxF,MAAO,oBAC1B,CAACwF,KAAM,cAAexF,MAAO,SAC7B,CAACwF,KAAM,eAAgBxF,MAAO+H,IAE1BG,EAAYC,KAAKC,MAAMJ,GAC3BK,QAAQC,IAAIJ,YACCO,eAAMZ,EAASC,EAAQC,EAAYG,EAAWD,kJAGlDS,6BAAe,WAAOb,EAA4BE,kFAC9CY,eAAKd,EAASE,8IF3B/B,SAASa,EAAQzG,EAAe0G,cAEjB1G,IACT,MAAO2G,UACED,GAMf,SAAsBE,wEAAf,WAAmBhJ,EAA6CiJ,EAAmCC,aAKvFC,QAYAC,0GAAf,4FACgBC,EAAQC,KAAK,CAAEC,KAAM,8BAAjCC,kBAEkCC,OAAOJ,QAAQC,KAAK,CAAEC,KAAM,8BAC9DzB,UACQ4B,OAASF,EAAIE,iBACJ,IAAI3D,mCAAS,WAAM1C,8EAAWA,WAAcoG,OAAOE,cAAcC,yLAAlF9K,6EANWsK,6EAZf,qGAGcK,OAAOE,cAAcE,kBAAYC,GAAa,mBAAmB,CAAErE,KAAAA,EAAMsE,KAAAA,qJAHxEZ,6CAJXW,EAAc9J,EAAI8J,YACtBrE,EAAOoD,EAAQ7I,EAAG,KAAU,IAC5B+J,EAAOlB,EAAQ7I,EAAG,KAAU,aAoCdmJ,IAASzF,eAAK,4FAAiB0F,gHAKnB,CAEtBY,uCAAa,WAAgBC,kFACZnC,EAAQoC,kBAAkBD,4IAG3CE,gCAAM,WAAgBH,kFACLlC,EAAQsC,aAAaD,KAAKH,4IAG3CK,OAAQ,SAAUL,EAAavE,EAAMxF,GACjC+J,EAAYK,OAAO5E,EAAMxF,IAG7BqK,gCAAM,WAAgBN,kFACZlC,EAAQsC,aAAaE,KAAKN,oGAGpCO,kCAAQ,WAAgBP,kFACPlC,EAAQsC,aAAaI,YAAYR,4IAGlDS,WAAY,CACRjC,iCAAO,WAAOP,EAAOyC,wFAEXzB,EAAW,kBAChBC,kCAAarB,EAAcC,EAAS,aAAc4C,EAAIzC,GACtDvE,MAAK,SAAAF,UAAUyG,EAAOzG,0DACjByF,EAAW,wCACVgB,uGAEXvB,iCAAO,WAAOT,EAAOyC,wFAEXzB,EAAW,kBAChBC,kCAAaT,EAAaX,EAAS,aAAc4C,EAAIzC,GACrDvE,MAAK,SAAAF,UAAUyG,EAAOzG,0DACjByF,EAAW,wCACVgB,uGAEXrB,gCAAM,WAAO8B,wFAEHzB,EAAW,kBAChBC,kCAAaP,EAAab,EAAS4C,GACnChH,MAAK,SAAAF,UAAUyG,EAAOzG,0DACjByF,EAAW,wCACVgB,sGAIfU,WAAY,kBACD7C,GAKX8C,WAAY,WACRnB,OAAOE,cAAciB,cAGzBC,sCAAY,WAA2BC,EAAmBC,kFAAnBD,IAAAA,EAAW,iBAAQC,IAAAA,EAAU,cAEhED,EAAwB,QAAZA,EAAsBhM,EAAWgM,oBACtC,IAAI/E,mCAAS,WAAO1C,kFACjBmG,EAAIwB,QAAQH,WAAWC,GAAUpH,MAAK,SAACuH,GACzCF,EAAQE,GACR5H,EAAQ4H,4MAIpBC,WAAY,SAAUH,mBAAAA,IAAAA,EAAU,cACrB,IAAIhF,mCAAQ,WAAO1C,2FAEZoG,OAAOE,cAAcC,mBAAmBlG,MAAK,SAAAyH,GAC/CJ,EAAQI,GACR9H,EAAQ8H,4DAGZ9H,EAAQvE,GACRiM,EAAQjM,gOGrI5B,IAAIA,EAAiB,GAErB,SAAsBsM,wEAAf,WAAoBpL,EAAUiJ,EAAiBC,wFACrBG,EAAQC,KAAK,CAAEC,KAAM,0BAA9CzB,SACJQ,QAAQC,IAAIT,IACZ9H,EAAqB,iBAAPA,EAAkBoI,KAAKC,MAAMrI,GAAOA,GAC3C,yBAAe,0DAED,IAAI+F,mCAAS,WAAM1C,8EAAWA,WAAcyE,EAAQkD,QAAQK,aAAarL,+KAA1FlB,mBAEuB,CAEvBkL,uCAAa,WAAgBC,EAAWqB,kFAAAA,IAAAA,EAAYtL,YACnC8H,EAAQoC,kBAAkBD,EAAMqB,8IAGjDnB,gCAAM,WAAgBH,kFACLlC,EAAQsC,aAAaD,KAAKH,4IAG3CK,OAAQ,SAAUL,EAAavE,EAAcxF,GACzC+J,EAAYK,OAAO5E,EAAMxF,IAG7BqK,gCAAM,WAAgBN,EAAasB,kFAAAA,IAAAA,EAAYtL,YACrC8H,EAAQsC,aAAaE,KAAKN,EAAasB,sGAGjDf,kCAAQ,WAAgBP,kFACPlC,EAAQsC,aAAaI,YAAYR,4IAGlDS,WAAY,CACRjC,iCAAO,WAAOP,EAAYyC,EAAYY,wFAAAA,IAAAA,EAAYtL,YAExCiJ,EAAW,kBAChBC,kCAAarB,EAAcC,EAASwD,EAAMZ,EAAIzC,GAC9CvE,MAAK,SAAAF,UAAUyG,EAAOzG,0DACjByF,EAAW,wCACVgB,yGAEXvB,iCAAO,WAAOT,EAAYyC,EAAYY,wFAAAA,IAAAA,EAAYtL,YAExCiJ,EAAW,kBAChBC,kCAAaT,EAAaX,EAASwD,EAAMZ,EAAIzC,GAC7CvE,MAAK,SAAAF,UAAUyG,EAAOzG,0DACjByF,EAAW,wCACVgB,yGAEXrB,gCAAM,WAAO8B,2EAETzB,EAAW,QACVC,kCAAaP,EAAab,EAAS4C,GACnChH,MAAK,SAAAF,UAAUyG,EAAOzG,gDACvByF,EAAW,yBACJgB,qGAIfU,WAAY,kBACD7C,GAKX8C,WAAY,aAEZC,sCAAY,WAA2BC,EAA2BC,kFAA3BD,IAAAA,EAAmB,iBAAQC,IAAAA,EAAe,cAE7ED,EAAwB,QAAZA,EAAsBhM,EAAWgM,WAChC,IAAI/E,mCAAS,WAAO1C,kFACvByE,EAAQkD,QAAQH,WAAWC,GAAUpH,MAAK,SAACuH,GAC7CF,EAAQE,GACR5H,EAAQ4H,mPAKpBC,sCAAY,WAA2BH,kFAAAA,IAAAA,EAAe,uBACrC,IAAIhF,mCAAS,WAAO1C,kFACvByE,EAAQkD,QAAQK,aAAarL,GAAK0D,MAAK,SAAC6H,GAC1CR,EAAQQ,GACRlI,EAAQkI,uWCnFZC,EAAWC,EAAuBvC,SACvC,CACHwC,uBAAW,WAAgB3D,EAAakB,EAAiBjJ,uEAC7C+H,SACC,mBAEA,0CADqC,GAA9B0D,EAAUE,QAAQ5D,mCAAuBqD,EAAKpL,EAAKiJ,EAAYC,kDAAO,sDAExC,GAA9BuC,EAAUE,QAAQ5D,qCAAuBiB,EAAIhJ,EAAKiJ,EAAYC,oDAAO,wDAClE,IAAIZ,QAAQ1E,MAAM,kHCLjD,IAAMgI,EAAiBC,gBAA6B,2CAqBrBL,IAAAA,eAAYM,UAAAA,gBAAmBC,IAAAA,YAGpC,OAFAC,aAAWJ,SAGvB,IAAIvK,MAAM,qDAEQ4K,WAAiB,gBAAtCC,OAAQC,SACUF,WAAmB,gBAA3CG,OAASC,SACcJ,WAAiB,MAAxCnE,OAASsB,SACiB6C,WAAiB,GAA3CK,OAAUC,OAIPC,EAAmB,OAClB,IAAMf,KAAaD,EACH,WAAbC,GAA0BD,EAAWC,IACrCe,EAAK9H,KAAK+G,GAGG,aAAbA,GAA4BD,EAAWC,IACvCe,EAAK9H,KAAK+G,SAGoBQ,WAAwBO,GAAvDC,OAAaC,OAEpBC,aAAU,WACND,EAAeF,KAChB,QAEGvD,EAAa2D,eACf,SAACC,UACWA,OACC,aACDN,EAAaD,EAAY,GAClBA,MACN,aACDC,EAAaD,EAAY,GAClBA,eACI,uCAGvB,CACIA,IAGJQ,EAAOC,WAAQ,kBACRC,EAAYP,EAAaX,KACjC,CAACW,IAGE7B,EAAagC,eAAY,WAC3BL,EAAa,GACbJ,EAAU,gBACVE,EAAY,kBAGb,CACCH,EACApE,EACAsE,EACAE,EACArD,IAGEY,EAAU+C,yCAAY,WAAOnB,EAAWwB,yEAC1CrC,IACAuB,EAAU,uBACAW,EAAKpB,UAAUD,EAAWxC,EAAYgE,GAAOvJ,gCAAK,WAAOF,8EACrD4F,WAAiB5F,2DACvB6I,EAAYZ,GACZU,EAAU,sHACJ,SAAA7L,SACN6L,EAAU,kCACoBV,OAAcnL,wGAErD,CAACsK,IAEEsC,EAAQ,SAACC,UAAcR,aAAU,WACtB,aAAVT,GAAsBiB,MAC3B,CAACjB,EAAOpE,KAEJC,EAAiBgF,WACnB,iBAAO,CACHlD,QAAAA,EACAqC,OAAAA,EACApE,QAAAA,EACAsE,SAAAA,EACAc,MAAAA,EACAZ,UAAAA,EACA1B,WAAAA,KAEJ,CACIf,EACAqC,EACApE,EACAsE,EACAE,EACArD,EACA2B,WAIJwC,gBAACxB,EAAeyB,UAASpN,MAAO,CAC5B8H,OAAAA,EACAD,QAAAA,IAECiE,yCA7Hb,eACUuB,EAAgBtB,aAAWJ,MAEX,OAAlB0B,QACM,IAAIjM,MACN,mGAKA0G,EAAoBuF,EAApBvF,OAAQD,EAAYwF,EAAZxF,eACTiF,WAAQ,uBAEEjF,EAAYC,KAC1B,CAACA,EAAQD"}